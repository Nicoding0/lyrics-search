{"version":3,"sources":["components/layout/31.gif","components/layout/Navbar.js","context.js","components/layout/Loading.js","components/lyrics/Track.js","components/lyrics/Tracks.js","components/lyrics/Search.js","components/layout/Index.js","components/lyrics/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","style","backgroundColor","className","Context","createContext","ContextProvider","children","useState","track_list","heading","trackList","setTrackList","useEffect","API","process","a","async","fetch","response","json","data","message","body","getData","Provider","value","Loader","Fragment","src","loading","alt","width","margin","display","Track","props","track","artist_name","track_name","album_name","to","track_id","Tracks","useContext","undefined","length","Loading","map","item","key","Search","setContextState","userQuery","setUserQuery","genreList","setGenreList","genresLoaded","setGenresLoaded","choosenGenre","setChoosenGenre","userArtist","setUserArtist","then","genresData","genres","music_genre_list","sort","onSubmit","e","preventDefault","trackListData","queryResponse","catch","err","console","log","type","placeholder","name","onChange","target","data-target","data-toggle","aria-expanded","aria-controls","id","defaultValue","genre","music_genre","music_genre_id","uuid","v4","music_genre_name_extended","Index","Lyrics","match","lyrics","setLyrics","setTrack","albumData","setAlbumData","proxy","params","lyricsData","trackData","albumId","album_id","album","lightgray","color","bluePurp","Object","keys","lyrics_body","split","line","track_rating","primary_genres","music_genre_name","explicit","num_favourite","album_release_date","href","track_share_url","rel","album_copyright","lyrics_copyright","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.813ce6e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/31.24d95baa.gif\";","import React from \"react\";\r\n\r\nfunction Navbar() {\r\n  const bluePurp = {\r\n    backgroundColor: \"#5378ace1\"\r\n  };\r\n\r\n  return (\r\n    <nav style={bluePurp} className=\"navbar navbar-dark mb-5\">\r\n      <span className=\"navbar-brand mb-0 h1 mx-auto\">Lyrics Search</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const Context = createContext();\r\n\r\nexport function ContextProvider({ children }) {\r\n  let responseData = {\r\n    track_list: [],\r\n    heading: \"\"\r\n  };\r\n  const [trackList, setTrackList] = useState(responseData);\r\n\r\n  useEffect(() => {\r\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n    const API = `${proxy}https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=20&country=fr&f_has_lyrics=1&apikey=${process.env.REACT_APP_API_KEY}`;\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(API);\r\n      const data = await response.json();\r\n\r\n      setTrackList({\r\n        track_list: data.message.body.track_list,\r\n        heading: \"Top 20 Tracks\"\r\n      });\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  // console.log(trackList);\r\n\r\n  //*DOC HERE -> https://developer.musixmatch.com/documentation/api-reference/track-chart-get\r\n\r\n  return (\r\n    <Context.Provider value={[trackList, setTrackList]}>\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport loading from \"./31.gif\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        src={loading}\r\n        alt=\"Loading...\"\r\n        style={{ width: \"140px\", margin: \"150px auto\", display: \"block\" }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Track(props) {\r\n  const { track } = props;\r\n\r\n  const bluePurp = {\r\n    backgroundColor: \"#5378ace1\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div style={bluePurp} className=\"card text-white mb-4 shadow rounded-lg\">\r\n        <div className=\"card-body shadow\">\r\n          <h5>{track.artist_name}</h5>\r\n          <br />\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-play mr-2\"></i>\r\n            </strong>\r\n            Track: {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className=\"fas fa-compact-disc mr-2\"></i>\r\n            </strong>\r\n            Album: {track.album_name}\r\n          </p>\r\n          <Link\r\n            to={`lyrics-search/lyrics/track/${track.track_id}`}\r\n            className=\"btn btn-light btn-block\"\r\n          >\r\n            <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Track;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../context\";\r\nimport Loading from \"../layout/Loading\";\r\nimport Track from \"./Track\";\r\n\r\nfunction Tracks() {\r\n  const [data] = useContext(Context);\r\n  const { track_list, heading } = data;\r\n\r\n  // console.log(data);\r\n\r\n  if (track_list === undefined || track_list.length === 0) {\r\n    return <Loading />;\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <h3 className=\"text-center mb-4\">{heading}</h3>\r\n        <div className=\"row\">\r\n          {track_list.map(item => (\r\n            <Track key={item.track.track_id} track={item.track} />\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Context } from \"../../context\";\r\nimport uuid from \"uuid\";\r\n\r\n//! add more options for searching\r\n//! https://developer.musixmatch.com/documentation/api-reference/track-search\r\n\r\nfunction Search() {\r\n  // eslint-disable-next-line\r\n  const [contextState, setContextState] = useContext(Context);\r\n  const [userQuery, setUserQuery] = useState(\"\");\r\n  let [genreList, setGenreList] = useState();\r\n  const [genresLoaded, setGenresLoaded] = useState(false);\r\n  const [choosenGenre, setChoosenGenre] = useState(\"\");\r\n  const [userArtist, setUserArtist] = useState(\"\");\r\n\r\n  // console.log(genresLoaded);\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/music.genres.get&apikey=${process.env.REACT_APP_API_KEY}`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(genresData => {\r\n        let genres = genresData.message.body.music_genre_list;\r\n        genres.sort();\r\n        setGenreList(genres);\r\n        setGenresLoaded(true);\r\n      });\r\n  }, []);\r\n\r\n  const findTracks = e => {\r\n    e.preventDefault();\r\n\r\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n    const API = `${proxy}https://api.musixmatch.com/ws/1.1/track.search?q_track=${userQuery}&f_music_genre_id=${choosenGenre}&q_artist=${userArtist}&f_has_lyrics=1&page_size=20&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_API_KEY}`;\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(trackListData => {\r\n        // console.log(trackListData);\r\n        let queryResponse = trackListData.message.body.track_list;\r\n        setContextState({\r\n          track_list: queryResponse,\r\n          heading: \"Search Results\"\r\n        });\r\n        setUserQuery(\"\");\r\n      })\r\n      .catch(err => console.log(`Something went wrong: ${err}`));\r\n  };\r\n\r\n  const updateQueryGenre = e => {\r\n    setChoosenGenre(e.target.value);\r\n    // console.log(choosenGenre);\r\n  };\r\n\r\n  const updateQueryArtist = e => {\r\n    setUserArtist(e.target.value);\r\n  };\r\n\r\n  const updateQuery = e => {\r\n    setUserQuery(e.target.value);\r\n  };\r\n\r\n  // console.log(genreList);\r\n\r\n  // eslint-disable-next-line\r\n  const orange = {\r\n    backgroundColor: \"#f28c73d2\"\r\n  };\r\n\r\n  const bluePurp = {\r\n    backgroundColor: \"#5378ace1\"\r\n  };\r\n\r\n  return (\r\n    <div style={bluePurp} className=\"card card-body text-white mb-4 p-4 shadow\">\r\n      <h1 className=\"display-4 text-center\">\r\n        <i className=\"fas fa-music\"></i> Search For A Track\r\n      </h1>\r\n      <p className=\"lead text-center\">Get Lyrics for your song</p>\r\n      <form onSubmit={findTracks}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            placeholder=\"Track Title...\"\r\n            name=\"userQuery\"\r\n            value={userQuery}\r\n            onChange={updateQuery}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          data-target=\"#moreFilters\"\r\n          className=\"btn btn-light mb-3 btn-sm font-weight-bold\"\r\n          data-toggle=\"collapse\"\r\n          aria-expanded=\"false\"\r\n          aria-controls=\"moreFilters\"\r\n        >\r\n          More...\r\n        </button>\r\n        <div className=\"collapse\" id=\"moreFilters\">\r\n          <div className=\"form-group bg-dark d-inline\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Artist Name...\"\r\n              onChange={updateQueryArtist}\r\n            />\r\n            <select onChange={updateQueryGenre} className=\"custom-select mb-3\">\r\n              <option defaultValue>Genre...</option>\r\n              {genresLoaded !== true\r\n                ? (genreList = [1, 2, 3])\r\n                : genreList.sort().map(genre => {\r\n                    // console.log(genre.music_genre.music_genre_id);\r\n                    return (\r\n                      <option\r\n                        className=\"font-weight-bold\"\r\n                        value={genre.music_genre.music_genre_id}\r\n                        key={uuid.v4()}\r\n                      >\r\n                        {genre.music_genre.music_genre_name_extended}\r\n                      </option>\r\n                    );\r\n                  })}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-light btn-lg btn-block mb-5 font-weight-bold\"\r\n          type=\"submit\"\r\n        >\r\n          Search For Lyrics\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Tracks from \"../lyrics/Tracks\";\r\nimport Search from \"../lyrics/Search\";\r\n\r\nfunction Index() {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Tracks />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../layout/Loading\";\r\nimport uuid from \"uuid\";\r\n\r\nfunction Lyrics({ match }) {\r\n  // console.log(match);\r\n  const [lyrics, setLyrics] = useState({});\r\n  const [track, setTrack] = useState({});\r\n  const [albumData, setAlbumData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n    const API = `${proxy}https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`;\r\n\r\n    fetch(API)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(lyricsData => {\r\n        let lyrics = lyricsData.message.body.lyrics;\r\n        setLyrics({ lyrics });\r\n\r\n        return fetch(\r\n          `${proxy}https://api.musixmatch.com/ws/1.1/track.get?track_id=${match.params.id}&apikey=${process.env.REACT_APP_API_KEY}`\r\n        );\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(trackData => {\r\n        // console.log(trackData);\r\n\r\n        let track = trackData.message.body.track;\r\n        setTrack({ track });\r\n\r\n        let albumId = trackData.message.body.track.album_id;\r\n\r\n        return fetch(\r\n          `${proxy}https://api.musixmatch.com/ws/1.1/album.get?album_id=${albumId}&apikey=${process.env.REACT_APP_API_KEY}`\r\n        );\r\n      })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(albumData => {\r\n        // console.log(albumData);\r\n        let album = albumData.message.body.album;\r\n\r\n        setAlbumData({ album });\r\n      })\r\n      .catch(err => console.log(`Something went wrong: ${err}`));\r\n  }, [match]);\r\n\r\n  //* track info for particular song lyrics\r\n  //* track.get?(common)track_id=5920049\r\n\r\n  const lightgray = {\r\n    color: \"#adb3b8\"\r\n  };\r\n\r\n  const bluePurp = {\r\n    backgroundColor: \"#5378ace1\"\r\n  };\r\n\r\n  if (\r\n    lyrics === undefined ||\r\n    track === undefined ||\r\n    Object.keys(lyrics).length === 0 ||\r\n    Object.keys(track).length === 0 ||\r\n    Object.keys(albumData).length === 0\r\n  ) {\r\n    return <Loading />;\r\n  } else {\r\n    // console.log(lyrics, track);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Link\r\n          to=\"/\"\r\n          style={bluePurp}\r\n          className=\"btn btn-sm mb-4 text-white font-weight-bold\"\r\n        >\r\n          Go Back\r\n        </Link>\r\n        <div className=\"card shadow\">\r\n          <h5\r\n            style={bluePurp}\r\n            className=\"card-header text-center text-white shadow\"\r\n          >\r\n            <span style={lightgray}> {track.track.track_name}</span> by{\" \"}\r\n            <span style={lightgray}>{track.track.artist_name}</span>\r\n          </h5>\r\n          <div className=\"card-body bg-light\">\r\n            <p className=\"card-text text-center\">\r\n              {lyrics.lyrics.lyrics_body.split(/(\\r\\n|\\n|\\r)/gm).map(line => {\r\n                return (\r\n                  <React.Fragment key={uuid.v4()}>\r\n                    {line}\r\n                    <br />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <ul className=\"list-group mt-4 shadow\">\r\n          <li className=\"list-group-item bg-light\">\r\n            <strong>Rating</strong>: {track.track.track_rating}/100\r\n          </li>\r\n          <li className=\"list-group-item bg-light shadow-sm\">\r\n            <strong>Album</strong>: {track.track.album_name}\r\n          </li>\r\n          {track.track.primary_genres.music_genre_list.length === 0 ? (\r\n            <li className=\"list-group-item bg-light shadow-sm\">\r\n              <strong>Genre</strong>: N/A\r\n            </li>\r\n          ) : (\r\n            <li className=\"list-group-item bg-light shadow-sm\">\r\n              <strong>Genre</strong>:{\" \"}\r\n              {\r\n                track.track.primary_genres.music_genre_list[0].music_genre\r\n                  .music_genre_name\r\n              }\r\n            </li>\r\n          )}\r\n\r\n          <li className=\"list-group-item bg-light shadow-sm\">\r\n            <strong>Explicit</strong>:{\" \"}\r\n            {track.track.explicit === 0 ? \"No\" : \"Yes\"}\r\n          </li>\r\n          <li className=\"list-group-item bg-light shadow-sm\">\r\n            <strong>Likes</strong>: {track.track.num_favourite}\r\n          </li>\r\n          <li className=\"list-group-item bg-light shadow-sm\">\r\n            <strong>Release Date</strong>: {albumData.album.album_release_date}\r\n          </li>\r\n          <li className=\"list-group-item bg-light shadow-sm\">\r\n            <strong>Full Lyrics</strong>:{\" \"}\r\n            <a\r\n              className=\"text-dark\"\r\n              href={track.track.track_share_url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Click Me\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"list-group mt-5 shadow\">\r\n          <li className=\"list-group-item bg-light shadow-sm text-center\">\r\n            {albumData.album.album_copyright}\r\n          </li>\r\n        </ul>\r\n        <footer\r\n          style={bluePurp}\r\n          className=\"navbar navbar-dark mt-5 fixed-bottom text-white small mx-auto\"\r\n        >\r\n          <small className=\"mx-auto\">{lyrics.lyrics.lyrics_copyright}</small>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Index from \"./components/layout/Index\";\nimport { ContextProvider } from \"./context\";\nimport Lyrics from \"./components/lyrics/Lyrics\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <ContextProvider>\n      <Router>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/lyrics-search/\" component={Index} />\n              <Route\n                exact\n                path=\"/lyrics-search/lyrics/track/:id\"\n                component={Lyrics}\n              />\n            </Switch>\n          </div>\n        </React.Fragment>\n      </Router>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}